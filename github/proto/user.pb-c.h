/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_user_2eproto__INCLUDED
#define PROTOBUF_C_user_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _User User;
typedef struct _Users Users;


/* --- enums --- */


/* --- messages --- */

struct  _User
{
  ProtobufCMessage base;
  char *username;
  char *password;
  protobuf_c_boolean has_age;
  int32_t age;
  char *email;
};
extern char user__username__default_value[];
#define USER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&user__descriptor) \
    , user__username__default_value, NULL, 0,0, NULL }


struct  _Users
{
  ProtobufCMessage base;
  size_t n_user;
  User **user;
};
#define USERS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&users__descriptor) \
    , 0,NULL }


/* User methods */
void   user__init
                     (User         *message);
size_t user__get_packed_size
                     (const User   *message);
size_t user__pack
                     (const User   *message,
                      uint8_t             *out);
size_t user__pack_to_buffer
                     (const User   *message,
                      ProtobufCBuffer     *buffer);
User *
       user__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   user__free_unpacked
                     (User *message,
                      ProtobufCAllocator *allocator);
/* Users methods */
void   users__init
                     (Users         *message);
size_t users__get_packed_size
                     (const Users   *message);
size_t users__pack
                     (const Users   *message,
                      uint8_t             *out);
size_t users__pack_to_buffer
                     (const Users   *message,
                      ProtobufCBuffer     *buffer);
Users *
       users__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   users__free_unpacked
                     (Users *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*User_Closure)
                 (const User *message,
                  void *closure_data);
typedef void (*Users_Closure)
                 (const Users *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor user__descriptor;
extern const ProtobufCMessageDescriptor users__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_user_2eproto__INCLUDED */
